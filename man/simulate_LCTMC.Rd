% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_LCTMC.R
\name{simulate_LCTMC}
\alias{simulate_LCTMC}
\title{Simulate a data from a latent CTMC model}
\usage{
simulate_LCTMC(
  N.indiv = integer(),
  N.obs_times = integer(),
  max.obs_times = numeric(),
  fix.obs_times = logical(),
  true_param = list(),
  alpha.include = logical(),
  beta.incldue = logical(),
  K = integer(),
  M = integer(),
  p1 = integer(),
  p2 = integer(),
  initS_p = c(),
  death = integer()
)
}
\arguments{
\item{N.indiv}{an integer scalar indicating the number of individuals/study participants/subjects}

\item{N.obs_times}{an integer scalar indicating the number of observations per individual}

\item{max.obs_times}{a numeric scalar for the maximum possible value for observation time}

\item{fix.obs_times}{a logical scalar. If FALSE then uses ordered uniform random variables are created as the observation times.
If TRUE then make observation at set to be equal length intervals}

\item{true_param}{a list object holding the true model parameters to perform the simulation. This list object should contain 3 elements:
\itemize{
\item \strong{r0} this is the exponential of the intercept term for the transition rates \eqn{q_{rs}}
\item \strong{beta} this is the exponential of the coefficient terms for the transition rates \eqn{q_{rs}}
\item \strong{pi} this is the intercept & coefficient terms for the latent class model (multinomial logistic)
}}

\item{alpha.include}{a logical scalar. If set to FALSE then the latent class model will not have covariate effects}

\item{beta.incldue}{a logical scalar. If set to FALSE then the CTMC model will not have covariate effects}

\item{K}{an integer scalar indicating the number of latent classes (only supports K = 3L at the moment)}

\item{M}{an integer scalar indicating number of CTMC states (only supports M = 2L or M = 3L at the moment)}

\item{p1}{an integer scalar. This is the number of covariates allowed to affect the transition rates (only supports p1 = 2L at the moment)}

\item{p2}{an integer scalar. This is the  number of covariates allowed to affect the latent class componenent of the model (only supports p1 = 2L at the moment)}

\item{initS_p}{probability of initial states. \cr
For example, with \code{M = 3L} and \code{initS_p = c(1/2, 1/2, 0)}, then 50\% of the individuals will start in state 1 of the CTMC process, and the other 50\% will start in state 2.}

\item{death}{if death is a possible state, then use this argument to specify it. \cr
Death state is treated as an absorbing state. Observations will be truncated after death occurs. In addition, death occurrence is assumed to be known exactly. \cr}
}
\value{
a list object containing two sub list objects. The first is, \code{sim_data}, the simulated data where each element is one person.
Within each is a list containing the following elements:
\itemize{
\item \strong{obsTime}: a vector of numeric times when the observations are made
\item \strong{state_at_obsTime}: the CTMC state at the observation times
\item \strong{transTime}: the simulated exact time of transitions
\item \strong{state_at_transTime}: the CTMC state at the exact time of observation
\item \strong{xi}: a numeric vector for covariates that affects the transition rates (X)
\item \strong{wi}: a numeric vector for covariates that affects the latent multinomial model (W)
\item \strong{zi}: the randomly assigned latent class. It can only be integer values from 1 to \code{K}
}
The second item returns by this function is, \code{true_param}, a list object containing the true model parameter values used to simulate the data.
Note that this may not be equivalent to the input argument \code{true_param} depending on whether \code{alpha.include} and \code{beta.include} are set to TRUE or FALSE.
}
\description{
Given some underlying parameter values that dictate the latent class assignment process, the CTMC process, and observation times.
simulates a latent CTMC process and outputs the result to a list object.
}
\note{
Once simulation is complete, use \code{convert_sim_data_2df(...)} to format the data into a "data.frame" object.
}
\examples{
# simulation parameters
my_N = 20
my_N.obs_times = 15
my_max.obs_times = 90
my_fix.obs_times = FALSE

my_beta.include = TRUE
my_M = 2
my_p1 = 2

my_alpha.include = TRUE
my_K = 3
my_p2 = 2

my_initS_p = c(1/2, 1/2)
my_death = NULL # for a two-stage process we do not have death state, set to NULL

set.seed(123)

# first generate true parameters
my_true_param = gen_true_param(K_class = 3, M_state = 2)

# simulate
d = simulate_LCTMC(
   N.indiv = my_N,
   N.obs_times = my_N.obs_times,

   max.obs_times = my_max.obs_times,
   fix.obs_times = my_fix.obs_times,

   true_param = my_true_param,
   alpha.include = my_alpha.include,
   beta.incldue = my_beta.include,

   K = my_K,
   M = my_M,
   p1 = my_p1,
   p2 = my_p2,

   initS_p = my_initS_p,
   death = my_death
)

# output is a list containing two elements:
length(d)
names(d)

# `sim_data` is the simulated data, here we print the simulation for person #1
d$sim_data[[1]]
}
