% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/force0_true_param.R
\name{force0_true_param}
\alias{force0_true_param}
\title{Constrains the model parameter values}
\usage{
force0_true_param(true_param, alpha.include, beta.include)
}
\arguments{
\item{true_param}{a list object obtained from \code{gen_true_param(...)}}

\item{alpha.include}{a logical scalar. See documentation in \code{simulate_LCTMC(...)}}

\item{beta.include}{a logical scalar. See documentation in \code{simulate_LCTMC(...)}}
}
\value{
a list object similar in structure to in the input argument \code{true_param}. \cr
\code{true_param$pi} and \code{true_parma$beta} either remain the same or forced to 0 (depending on \code{alpha.include} and \code{beta.include})
}
\description{
Forces the some of the model parameters to 0, namely the alpha coefficients and the beta coefficients. \cr
By setting those to zero, we essentially tells program to not include any covariate effects when performing the simulation.
}
\note{
for most use cases, this function will only be used within \code{simulate_LCTMC(...)}
}
\examples{
\dontrun{
  ### create model parameter values
  true_param = LCTMC.simulate::gen_true_param(M_state = 2, K_class = 3)

  ### force coefficient to 0
  true_param_new = LCTMC.simulate::force0_true_param(
    true_param = true_param,
    alpha.include = F,
    beta.include = F
  )


  ### print comparison ~ `r0`
  cat(
    "\n",
    "Original `r0`: (", paste(unlist(true_param$r0), collapse = ", "), ") \n",
    "     New `r0`: (", paste(unlist(true_param_new$r0), collapse = ", "), ") \n",
    sep = ""
  )

  ### print comparison ~ `beta`
  cat(
    "\n",
    "Original `beta`: (", paste(unlist(true_param$beta), collapse = ", "), ") \n",
    "     New `beta`: (", paste(unlist(true_param_new$beta), collapse = ", "), ") \n",
    sep = ""
  )

  ### print comparison ~ `pi` ~ notice intercept terms are NOT forced to 0
  cat(
    "\n",
    "Original `pi`: (", paste(unlist(true_param$pi), collapse = ", "), ") \n",
    "     New `pi`: (", paste(unlist(true_param_new$pi), collapse = ", "), ") \n",
    sep = ""
  )
}
}
