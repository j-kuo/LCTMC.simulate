% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_sim_data_2df.R
\name{convert_sim_data_2df}
\alias{convert_sim_data_2df}
\title{Data tidying for the simulation output}
\usage{
convert_sim_data_2df(my_list, type)
}
\arguments{
\item{my_list}{a list object obtained from the \code{simulate_LCTMC(...)} function}

\item{type}{a character scalar of either "obs", "exact", or "both"}
}
\value{
if \code{type = "both"} then a a list object with \strong{2} elements is returned:
\enumerate{
\item \strong{obs} this data contains the disease status at some pre-defined observed times. This essentially means that all outcomes are interval-censored.
\item \strong{exact} this data contains the exact time of disease status transitioning to a different state (i.e., non-censored data)
}
If \code{type} is equal to either "obs" or "exact" then a data.frame object is returned. The data frames corresponds to the either censored data or exactly-observed data
}
\description{
Converts the output of \code{simulate_LCTMC(...)} to a "data.frame" object
}
\examples{
# simulation parameters
my_N = 20
my_N.obs_times = 15
my_max.obs_times = 90
my_fix.obs_times = FALSE

my_beta.include = TRUE
my_M = 2
my_p1 = 2

my_alpha.include = TRUE
my_K = 3
my_p2 = 2

my_initS_p = c(1/2, 1/2)
my_death = NULL # for a two-stage process we do not have death state, set to NULL

set.seed(123)

# first generate true parameters
my_true_param = gen_true_param(K_class = 3, M_state = 2)

# simulate
d = simulate_LCTMC(
  N.indiv = my_N,
  N.obs_times = my_N.obs_times,

  max.obs_times = my_max.obs_times,
  fix.obs_times = my_fix.obs_times,

  true_param = my_true_param,
  alpha.include = my_alpha.include,
  beta.incldue = my_beta.include,

  K = my_K,
  M = my_M,
  p1 = my_p1,
  p2 = my_p2,

  initS_p = my_initS_p,
  death = my_death
)

# convert to data.frame
convert_sim_data_2df(my_list = d$sim_data, type = "obs")
convert_sim_data_2df(my_list = d$sim_data, type = "exact")
convert_sim_data_2df(my_list = d$sim_data, type = "both")
}
